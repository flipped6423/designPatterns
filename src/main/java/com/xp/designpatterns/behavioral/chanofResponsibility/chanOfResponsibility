责任链模式：
责任链模式是一种行为设计模式，用于在多个处理器对象链中传递请求，多个处理器对象都有机会处理请求，
直到某个处理器对象能处理该请求为止，从而规避了请求发送者和接收者之间的耦合

责任链模式通常用于不同的处理逻辑，其中每个处理器对象都决定自己能否处理当前请求，若能，则处理并返回，
不能，则将请求传递给处理链中的下一个处理器，直到能处理为止

客户端：
使用责任链模式的客户端，通常会创建处理器链，并启动请求的处理过程

处理器：
处理器包括一个处理器抽象类和多个处理器实现类
处理器抽象类负责维护处理器链上的公共逻辑，如判断是否能处理请求，设置下一个处理器实现类以及处理器实现类需要具体实现的抽象方法
不同的处理器实现类继承处理器抽象类，会继承公共逻辑，只需在实现请求处理抽象方法即可

优点：
1.降低耦合度：发送者和接收者解耦
2.灵活性、可扩展性、可维护性

缺点：
1.性能影响
2.调试困难

避免责任链出现超长链问题的策略：
1.限制链的长度
2.处理器职责划分明确
3.动态管理链中的元素

责任链模式最后如何确保请求会被处理？
1.通过在链的末端添加一个默认处理器实现
2.根据返回的特定结果，再去用默认处理器执行

在JDK中应用：
1.Java Servlet过滤器
2.日志API

在Spring中应用
1.Spring MVC拦截器
2.Spring Security安全过滤器链
